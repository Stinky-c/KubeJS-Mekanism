plugins {
	id "dev.architectury.loom" version "1.5-SNAPSHOT"
	id 'maven-publish'
	id "me.shedaniel.unified-publishing" version "0.1.+"
}

apply from: 'https://files.latmod.com/public/markdown-git-changelog.gradle'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_17

def ENV = System.getenv()
version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}"
archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
	silentMojangMappingsLicense()
}

repositories {
	maven {
		url "https://maven.architectury.dev/"
	}

	maven {
		url "https://modmaven.dev/"
		content {
			includeGroup "mekanism"
			includeGroup "mezz.jei"
		}
	}

	maven {
		url "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
			includeGroup "dev.ftb.mods"
		}
	}

	maven {
		url "https://beta.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()

	compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
	implementation(include("io.github.llamalad7:mixinextras-forge:0.3.5"))

	forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

	modApi "dev.latvian.mods:kubejs-forge:${project.kubejs_version}"

	modCompileOnly "mekanism:Mekanism:${project.mekanism_version}" // core (required for ingredient amount rn)

	// for testing
//    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}" // core
//    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:additions" // additions
//    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:generators" // generators
//    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:tools" // tools

	modLocalRuntime "curse.maven:mekanism-268560:5125665"
	modLocalRuntime "curse.maven:mekanism-generators-268566:5125668"
	modLocalRuntime "curse.maven:mekanism-tools-268567:5125669"
	modLocalRuntime "curse.maven:mekanism-additions-345425:5125667"

	modRuntimeOnly "curse.maven:jei-238222:${jei_file}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	def targetVersion = 17
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}

	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	archiveClassifier.set "dev"
}

publishing {
	publications {
		mavenForge(MavenPublication) {
			artifactId = rootProject.archivesBaseName
			from components.java
		}
	}

	repositories {
		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/minecraft"
				credentials {
					username = "latvian"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}

		if (ENV.MAVEN_TOKEN) {
			maven {
				url "https://maven.latvian.dev/releases"
				credentials {
					username = "lat"
					password = "${ENV.MAVEN_TOKEN}"
				}
			}
		}
	}
}

unifiedPublishing {
	project {
		releaseType = "${ENV.RELEASE_TYPE ?: 'release'}"
		gameVersions = [
				rootProject.minecraft_version
		]
		gameLoaders = ["forge"]
		displayName = "$mod_name Forge $project.version"
		changelog = getGitChangelog()
		mainPublication remapJar

		relations {
			depends {
				curseforge = modrinth = "kubejs"
			}
			depends {
				curseforge = modrinth = "mekanism"
			}
		}

		if (ENV.CURSEFORGE_KEY) {
			curseforge {
				token = ENV.CURSEFORGE_KEY
				id = project.curseforge_id
			}
		}

		if (ENV.MODRINTH_TOKEN) {
			modrinth {
				token = ENV.MODRINTH_TOKEN
				id = project.modrinth_id
				version = "$project.version"
			}
		}
	}
}
